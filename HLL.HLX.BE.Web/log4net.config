<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender" >
    <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录，文件名在DatePattern里设置，其他则这里要有文件名-->
    <!--<file value="Logs/Logs.txt" />-->
    <file value="Logs/Log" />

    <encoding value="UTF-8" />
    <!--True/false，默认为true。当文件存在时，是否在原文件上追加内容。-->
    <appendToFile value="true" />

    <!--<rollingStyle value="Size" />
    <maxSizeRollBackups value="10" />
    <maximumFileSize value="10000KB" />
    <staticLogFileName value="true" />-->

    <!--创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
    <rollingStyle value="Date" />
    <!--当RollingStyle为Composite或Date，这里设置文件名格式-->
    <datePattern value="yyyyMMdd'.txt'" />
    <!--True/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里-->
    <StaticLogFileName value="false" />
    <!--当RollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
    <maximumFileSize value="5000KB"/>
    <!--备份日志数目，默认为0。在CountDirection为负数时有效。-->
    <maxSizeRollBackups value="100"/>

    <layout type="log4net.Layout.PatternLayout">
      <!--每条日志末尾的文字说明-->
      <!--<footer value="by AutoDo" />-->
      <!--<Header value=" header" />-->

      <!--输出格式-->
      <!--样例：2008-03-26 13:42:32,111 [10] INFO Log4NetDemo.MainClass [(null)] - info-->
      <!--<conversionPattern value="记录时间：�te 线程ID:[%thread] 日志级别：%-5level 出错类：%logger property:[%property{NDC}] - 错误描述：%message%newline" />-->
      <conversionPattern value="%-5level %date [%-5.5thread] %-40.40logger - %message%newline" />
    </layout>
  </appender>
  <!--定义日志的输出媒介-->
  <root>
    <appender-ref ref="RollingFileAppender" />
    <level value="DEBUG" />
  </root>
  <logger name="NHibernate">
    <level value="WARN" />
  </logger>
</log4net>


